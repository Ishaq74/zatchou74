---
import  { Picture }  from "astro:assets";
import type { CollectionEntry } from 'astro:content';

type Props = {
    commentaire: CollectionEntry<"commentaires">;
};

const { commentaire } = Astro.props;
const { nom, photo, job, texte, note } = commentaire.data;

---
    <li class="cs-item">
        <div class="cs-flex-group">
            <picture>
                <Picture
                class="cs-profile"
                src={photo}
                alt={nom}
                format={"webp"}
                loading={"eager"}
                width={50}
                height={50} />
            </picture>
            <span class="cs-name">
                {nom}
                <span class="cs-job">{job}</span>
            </span>
        </div>
        <div class="wrapper">
            <img class="cs-item-stars" aria-hidden="true" loading="lazy" decoding="async" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Graphics/yellow-stars.svg" alt="stars" width="96" height="16">
            <p class="cs-review">
                {texte}
            </p>
        </div>
        <!--Quote Icon-->
        <img class="cs-quote" aria-hidden="true" src="https://csimg.nyc3.cdn.digitaloceanspaces.com/Images/Graphics/gray-quote.svg" decoding="async" alt="quote icon" width="120" height="99">
    </li>

<style>
    /* Mobile - 360px */
@media only screen and (min-width: 0rem) {
   .cs-item {
    list-style: none;
    width: 100%;
    /* 20px - 40px top & bottom */
    /* 20px - 40px left & right */
    padding: clamp(1.25rem, 3.15vw, 2.5rem) clamp(1.25rem, 3.15vw, 2.5rem);
    background-color: var(--primaryLight);
    /* prevents padding from adding to height and width */
    box-sizing: border-box;
    display: flex;
    justify-content: center;
    align-items: flex-start;
    flex-direction: column;
    position: relative;
    /* 24px - 48px */
    gap: clamp(1.5rem, 4vw, 3rem);
  }
   .cs-flex-group {
    /* this margin top auto will push everything up and force the cs-flex-group to the bottom of the container. This is to account for review cards with different heights because of more or less text and makes the cards more responsive to changing text */
    margin-bottom: auto;
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
  }
   .cs-profile {
    width: 3.25rem;
    border-radius: 50%;
    position: relative;
    display: block;
    object-fit: cover;
  }
   .cs-profile img {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    /* makes the image behave like a background image */
    object-fit: cover;
  }
   .cs-name {
    /* 20px - 25px */
    font-size: 1.25rem;
    line-height: 1.2em;
    font-weight: 700;
    margin: 0;
    /* in case one card has more text than the other, this pushes up against the review text so the name and title are always at the bottom. Only works if parent is a flexbox */
    margin-top: auto;
    color: var(--headerColor);
    display: block;
  }
   .cs-job {
    /* 14px - 16px */
    font-size: 1rem;
    line-height: 1.5em;
    font-weight: 400;
    margin: 0;
    color: var(--bodyTextColor);
    display: block;
  }
   .wrapper {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
   .cs-item-stars {
    width: 6.75rem;
    height: auto;
  }
   .cs-review {
    /* 14px - 16px */
    font-size: clamp(0.875rem, 1.6vw, 1.25rem);
    line-height: 1.5em;
    margin: 0;
    color: var(--bodyTextColor);
    z-index: 1;
  }
   .cs-quote {
    width: 5.375rem;
    height: auto;
    position: absolute;
    right: 0rem;
    bottom: 0rem;
    z-index: 0;
  }
}
</style>