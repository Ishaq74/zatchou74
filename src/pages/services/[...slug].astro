---
import { Image } from "astro:assets";
import type { GetStaticPaths } from "astro";
import { getCollection } from 'astro:content';
import BasicLayout from '../../layouts/BaseLayout.astro';
import type { CollectionEntry } from "astro:content";
import { getEntry } from 'astro:content';
import { formatDate } from '../../utils/formatDate.ts';
import Container from "../../components/Container/Container1.astro";
import Grid from "../../components/Elements/Grid/Grid.astro";
import HeroService from "../../components/Section/HeroService.astro";
import PostBanner from "../../components/BannerPage/PostBanner.astro";
import Steps1 from "../../components/Steps/Steps1.astro";
import Pricing1 from "../../components/Pricing/Pricing1.astro";
import Newsletter from "../../components/Newsletter/Newsletter.astro";
import ServiceCard1 from "../../components/Card/Service/ServiceCard1.astro";

export const prerender = true;

export async function getStaticPaths() {
    const services = await getCollection("services");
    return services.map((entry) => ({
        params: { slug: entry.slug },
        props: { entry }
    }));
}

type Props = {
    entry: CollectionEntry<"services">;
};

const { entry } = Astro.props;
const { Content } = await entry.render();

const services = await getCollection("services");
---

<BasicLayout frontmatter={entry.data} entry={entry}>
  <PostBanner
    showCredit={false}
    showExtra={false}
    title={entry.data.title}
    image={entry.data.image}
    altimage=""
  />
  <HeroService entry={entry} atoutsservices={entry.data.atoutsservices} />
  <Steps1 />
  <Pricing1 />
  <Newsletter />
  <section id="ArticlesRelatifs">
    <Container 
      topper="Dernières Nouvelles et Articles" 
      title="Blog" 
      description="Découvrez les dernières nouvelles et articles de notre blog."
      class="cs-container"
    >
      <ul class="cs-list">
        <Grid
          columnsDesktop={4}
          columnsTablet={2}
          columnsMobile={1}
          minColumnWidthDesktop="300px"
          minColumnWidthTablet="200px"
          minColumnWidthMobile="150px"
          gap="24px"
          backgroundColor="transparent"
        >
        {services.slice(0, 4).map((p) => <ServiceCard1 service={p} />)}
        </Grid> 
      </ul>
    </Container>
    <div class="cs-bubbles" aria-hidden="true"></div>
  </section>
</BasicLayout>

<style>
    
/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    .wrap {
        padding: var(--sectionPadding);
        position: relative;
        z-index: 10;
    }
     .cs-container {
        width: 100%;
        max-width: 80rem;
        margin: auto;
        display: flex;
        justify-content: center;
        align-items: center;
        flex-direction: column;
        gap: 1rem;
    }
    .cs-content {
        /* set text align to left if content needs to be left aligned */
        text-align: center;
        width: 100%;
        display: flex;
        flex-direction: column;
        /* centers content horizontally, set to flex-start to left align */
        align-items: center;
    }

}

/* Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    .cs-content {
        text-align: left;
        align-items: flex-start;
    }
}
</style>


